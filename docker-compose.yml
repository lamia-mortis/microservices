version: '3'

services:
  postgres:
      image: postgres:14-alpine
      environment:
        - POSTGRES_USER=root
        - POSTGRES_PASSWORD=secret
        - POSTGRES_DB=auth
      ports:
        - "5432:5432"
      volumes: 
        - ./postgres/auth:/var/lib/postgresql/data

  ui:
    build:
      context: ./ui
      args:
        - SERVER_BINARY_FILE=staticServer
        - FRONTEND_SRC_DIR=resources
        - WORK_DIR=${WORK_DIR}
        - NVM_VERSION=${NVM_VERSION}
        - NODE_VERSION=${NODE_VERSION}
    environment:
      - SERVER_BINARY_FILE=staticServer
      - WORK_DIR=${WORK_DIR}
      - NVM_VERSION=${NVM_VERSION}
      - NODE_VERSION=${NODE_VERSION}
      - UI_HOST=0.0.0.0
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1

  api-gateway:
    build:
      context: ./api-gateway
      args:
        - GATEWAY_BINARY_FILE=gatewayApp
        - WORK_DIR=${WORK_DIR}
    restart: always
    ports:
      - "8888:8888"
      - "50051:50051"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - GATEWAY_BINARY_FILE=gatewayApp
      - WORK_DIR=${WORK_DIR}
      - AUTH_SERVER_ADDRESS=auth-service:9090

  auth-service:
      build:
        context: ./auth-service
        args:
          - AUTH_BINARY_FILE=authApp
          - WORK_DIR=${WORK_DIR}
      restart: always
      ports:
        - "9090:9090"
      deploy:
        mode: replicated
        replicas: 1
      environment:
        - AUTH_BINARY_FILE=authApp
        - WORK_DIR=${WORK_DIR}
        - AUTH_DB_URL=postgresql://root:secret@postgres:5432/auth?sslmode=disable
      depends_on:
        - postgres
      entrypoint:
        [
          "/var/www/app/wait-for.sh",
          "postgres:5432",
          "--",
          "/var/www/app/entrypoint.sh"
        ]
      command: [ "/var/www/app/authApp" ]